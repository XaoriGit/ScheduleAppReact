/// <reference lib="webworker" />
import { precacheAndRoute, cleanupOutdatedCaches } from "workbox-precaching"

declare let self: ServiceWorkerGlobalScope

// Precache all assets generated by your build process
precacheAndRoute(self.__WB_MANIFEST)

// Cleanup old caches
cleanupOutdatedCaches()

// Listen for push events
self.addEventListener("push", (event) => {
    const data = event.data?.json() ?? {}
    const title = data.title || "Новое уведомление"
    const options: NotificationOptions = {
        body: data.body || "У вас новое сообщение",
        icon: data.icon || "/icon512_rounded.png",
        badge: "/icon512_maskable.png",
        data: data.url || "/",
        tag: data.tag || "default-tag",
    }

    event.waitUntil(self.registration.showNotification(title, options))
})

// Handle notification clicks
self.addEventListener("notificationclick", (event) => {
    event.notification.close()

    event.waitUntil(self.clients.openWindow(event.notification.data || "/"))
})

// Optional: Handle background sync, etc.
self.addEventListener("message", (event) => {
    if (event.data && event.data.type === "SKIP_WAITING") {
        self.skipWaiting()
    }
})
